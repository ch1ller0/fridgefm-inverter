on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

name: Push or PR 

jobs:
  test:
    name: Build, Test and maybe Publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ matrix.node-version }}-${{ runner.OS }}-yarn-${{ hashFiles('yarn.lock') }}
    - name: Install deps
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: yarn install
    - name: Building packages
      run: yarn build
    - name: Unit testing (with GC)
      run: yarn test:unit:gc
    - name: ESLint
      run: yarn test:lint
    - name: Type checking
      run: yarn test:typecheck
    - name: Create Release Pull Request or Publish to npm
      id: changesets
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: changesets/action@v1
      with:
        version: yarn changeset version
        publish: yarn changeset publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Send a notification if a publish happens
      if: steps.changesets.outputs.published == 'true'
      # You can do something when a publish happens.
      run: echo "A new version of ${GITHUB_REPOSITORY} was published!"